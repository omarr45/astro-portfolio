---
import { Icon } from 'astro-icon';

const links = [
  {
    name: 'Blog',
    url: '/blog',
  },
  {
    name: 'Projects',
    url: '/projects',
  },
  {
    name: 'CV',
    url: '/cv',
  },
];
---

<header class='relative z-40 border-0 border-b-2 border-b-foreground/10 py-3'>
  <nav
    id='wrapper'
    class='mx-auto flex max-w-4xl flex-wrap items-center justify-between gap-3 px-4 font-semibold'
  >
    <a
      title='Omar AbdulRahman'
      id='logo'
      href='/'
      class='px-2 text-4xl font-bold hover:text-accent focus:outline-none focus-visible:text-accent focus-visible:outline-dashed focus-visible:outline-accent'
    >
      Omar<span class='hidden md:inline'> AbdulRahman</span>
    </a>
    <button
      id='theme-toggle'
      class='ml-auto focus-within:text-accent focus-within:outline-accent hover:text-accent focus:outline-none focus-visible:outline-dashed focus-visible:outline-accent'
      title='Theme toggle'
    >
      <Icon name='icon-park-outline:dark-mode' class='inline h-6 w-6' />
    </button>
    <button id='menu-toggle' class='md:hidden' title='Menu toggle'>
      <Icon name='octicon:three-bars' class='inline h-6 w-6' />
    </button>
    <ul
      class='hidden max-w-4xl basis-full gap-2 space-y-2 pl-1 pt-2 text-lg md:flex md:max-h-max md:basis-auto md:items-center md:justify-center md:space-y-0 md:pt-0'
    >
      {
        links.map(({ name, url }) => (
          <li class='hover:text-accent focus:outline-none'>
            <a
              href={url}
              class='px-2 py-1 focus:outline-none focus-visible:text-accent focus-visible:outline-dashed focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-accent'
            >
              {name}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>

  <script>
    // Toggle the mobile menu
    const menu = document.querySelector('nav ul');
    const toggle = document.querySelector('#menu-toggle');
    toggle!.addEventListener('click', () => {
      menu && menu.classList.toggle('hidden');
    });

    // Close the mobile menu when a link is clicked
    const links = document.querySelectorAll('nav ul li a');
    links.forEach((link) => {
      link.addEventListener('click', () => {
        menu && menu.classList.toggle('hidden');
      });
    });

    // handle dark mode via prefers-color-scheme
    const darkMode = window.matchMedia('(prefers-color-scheme: dark)');
    const darkModeToggle = document.querySelector('#theme-toggle');
    const setDarkMode = (darkMode: boolean) => {
      if (darkMode) {
        document.documentElement.setAttribute('data-theme', 'dark');
        localStorage.setItem('astro-theme', 'dark');
        document.querySelectorAll('section').forEach((section) => {
          section.classList.add('prose-invert');
        });
      } else {
        document.documentElement.setAttribute('data-theme', 'light');
        localStorage.setItem('astro-theme', 'light');
        document.querySelectorAll('section').forEach((section) => {
          section.classList.remove('prose-invert');
        });
      }
    };

    // set the initial theme only if it's not already set
    const localTheme = localStorage.getItem('astro-theme');
    if (!localTheme) {
      setDarkMode(darkMode.matches);
    } else {
      setDarkMode(localTheme === 'dark');
    }

    // listen for changes
    darkModeToggle!.addEventListener('click', () => {
      if (document.documentElement.getAttribute('data-theme') === 'light') {
        document.documentElement.setAttribute('data-theme', 'dark');
        localStorage.setItem('astro-theme', 'dark');
        // add 'prose-invert' to any article element
        document.querySelectorAll('section').forEach((section) => {
          section.classList.add('prose-invert');
        });
      } else {
        document.documentElement.setAttribute('data-theme', 'light');
        localStorage.setItem('astro-theme', 'light');
        // remove 'prose-invert' from any article element
        document.querySelectorAll('section').forEach((section) => {
          section.classList.remove('prose-invert');
        });
      }
    });
  </script>
</header>
